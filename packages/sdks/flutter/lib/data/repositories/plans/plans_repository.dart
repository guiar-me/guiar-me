// This file is auto generated. DO NOT edit this file manually!
import 'package:sdk_flutter/sdk_flutter.dart';

class PlansRepository {
  final HttpClientContract _httpClient;

  PlansRepository(
    this._httpClient,
  );
  
  FutureEither<PlanModel> findPlan({
    required FindPlanUrlParam urlParams,
  }) async {
    Either<Json> response = await _httpClient.get(
      url: 'api/plans/{plan_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<PlanModel>(PlanModel.fromMap(response.right!))
      : Left<PlanModel>(response.left!);
  }
  
  FutureEither<PaginatedData<PlanModel>> listPlans() async {
    Either<PaginatedData<dynamic>> response = await _httpClient.index(
      url: 'api/plans',
    );

    return response.isRight
      ? Right<PaginatedData<PlanModel>>(PaginatedData<PlanModel>(
        data: PlanModel.fromList(response.right!.data),
        meta: response.right!.meta,
      ))
      : Left<PaginatedData<PlanModel>>(response.left!);
  }
  
  FutureEither<PlanModel> addPlan({
    required AddPlanBodyParam params,
  }) async {
    Either<Json> response = await _httpClient.post(
      url: 'api/plans',
      data: params.toMap(),
    );

    return response.isRight
      ? Right<PlanModel>(PlanModel.fromMap(response.right!))
      : Left<PlanModel>(response.left!);
  }
  
  FutureEither<bool> editPlan({
    required EditPlanBodyParam params,
    required EditPlanUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.put(
      url: 'api/plans/{plan_id}',
      data: params.toMap(),
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
}
