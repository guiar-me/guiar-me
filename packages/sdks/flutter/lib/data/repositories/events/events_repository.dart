// This file is auto generated. DO NOT edit this file manually!
import 'package:sdk_flutter/sdk_flutter.dart';

class EventsRepository {
  final HttpClientContract _httpClient;

  EventsRepository(
    this._httpClient,
  );
  
  FutureEither<bool> removeEvent({
    required RemoveEventUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.delete(
      url: 'api/events/{event_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
  FutureEither<EventModel> findEvent({
    required FindEventUrlParam urlParams,
  }) async {
    Either<Json> response = await _httpClient.get(
      url: 'api/events/{event_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<EventModel>(EventModel.fromMap(response.right!))
      : Left<EventModel>(response.left!);
  }
  
  FutureEither<PaginatedData<EventModel>> listEvents({
    required ListEventsQueryParam queryParams,
  }) async {
    Either<PaginatedData<dynamic>> response = await _httpClient.index(
      url: 'api/events',
      queryParams: queryParams.toMap(),
    );

    return response.isRight
      ? Right<PaginatedData<EventModel>>(PaginatedData<EventModel>(
        data: EventModel.fromList(response.right!.data),
        meta: response.right!.meta,
      ))
      : Left<PaginatedData<EventModel>>(response.left!);
  }
  
  FutureEither<EventModel> addEvent({
    required AddEventBodyParam params,
  }) async {
    Either<Json> response = await _httpClient.post(
      url: 'api/events',
      data: params.toMap(),
    );

    return response.isRight
      ? Right<EventModel>(EventModel.fromMap(response.right!))
      : Left<EventModel>(response.left!);
  }
  
  FutureEither<bool> editEvent({
    required EditEventBodyParam params,
    required EditEventUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.put(
      url: 'api/events/{event_id}',
      data: params.toMap(),
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
}
