// This file is auto generated. DO NOT edit this file manually!
import 'package:sdk_flutter/sdk_flutter.dart';

class HighlightsRepository {
  final HttpClientContract _httpClient;

  HighlightsRepository(
    this._httpClient,
  );
  
  FutureEither<bool> removeHighlight({
    required RemoveHighlightUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.delete(
      url: 'api/highlights/{highlight_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
  FutureEither<HighlightModel> findHighlight({
    required FindHighlightUrlParam urlParams,
  }) async {
    Either<Json> response = await _httpClient.get(
      url: 'api/highlights/{highlight_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<HighlightModel>(HighlightModel.fromMap(response.right!))
      : Left<HighlightModel>(response.left!);
  }
  
  FutureEither<PaginatedData<HighlightModel>> listHighlights() async {
    Either<PaginatedData<dynamic>> response = await _httpClient.index(
      url: 'api/highlights',
    );

    return response.isRight
      ? Right<PaginatedData<HighlightModel>>(PaginatedData<HighlightModel>(
        data: HighlightModel.fromList(response.right!.data),
        meta: response.right!.meta,
      ))
      : Left<PaginatedData<HighlightModel>>(response.left!);
  }
  
  FutureEither<HighlightModel> addHighlight({
    required AddHighlightBodyParam params,
  }) async {
    Either<Json> response = await _httpClient.post(
      url: 'api/highlights',
      data: params.toMap(),
    );

    return response.isRight
      ? Right<HighlightModel>(HighlightModel.fromMap(response.right!))
      : Left<HighlightModel>(response.left!);
  }
  
  FutureEither<bool> editHighlight({
    required EditHighlightBodyParam params,
    required EditHighlightUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.put(
      url: 'api/highlights/{highlight_id}',
      data: params.toMap(),
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
}
