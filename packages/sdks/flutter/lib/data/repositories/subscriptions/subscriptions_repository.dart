// This file is auto generated. DO NOT edit this file manually!
import 'package:sdk_flutter/sdk_flutter.dart';

class SubscriptionsRepository {
  final HttpClientContract _httpClient;

  SubscriptionsRepository(
    this._httpClient,
  );
  
  FutureEither<bool> removeSubscription({
    required RemoveSubscriptionUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.delete(
      url: 'api/subscriptions/{subscription_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
  FutureEither<SubscriptionModel> findSubscription({
    required FindSubscriptionUrlParam urlParams,
  }) async {
    Either<Json> response = await _httpClient.get(
      url: 'api/subscriptions/{subscription_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<SubscriptionModel>(SubscriptionModel.fromMap(response.right!))
      : Left<SubscriptionModel>(response.left!);
  }
  
  FutureEither<PaginatedData<SubscriptionModel>> listSubscriptions() async {
    Either<PaginatedData<dynamic>> response = await _httpClient.index(
      url: 'api/subscriptions',
    );

    return response.isRight
      ? Right<PaginatedData<SubscriptionModel>>(PaginatedData<SubscriptionModel>(
        data: SubscriptionModel.fromList(response.right!.data),
        meta: response.right!.meta,
      ))
      : Left<PaginatedData<SubscriptionModel>>(response.left!);
  }
  
  FutureEither<SubscriptionModel> addSubscription({
    required AddSubscriptionBodyParam params,
  }) async {
    Either<Json> response = await _httpClient.post(
      url: 'api/subscriptions',
      data: params.toMap(),
    );

    return response.isRight
      ? Right<SubscriptionModel>(SubscriptionModel.fromMap(response.right!))
      : Left<SubscriptionModel>(response.left!);
  }
  
}
