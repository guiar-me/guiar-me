// This file is auto generated. DO NOT edit this file manually!
import 'package:dio/dio.dart';
import 'package:sdk_flutter/sdk_flutter.dart';

class ActivitiesRepository {
  final HttpClientContract _httpClient;

  ActivitiesRepository(
    this._httpClient,
  );
  
  FutureEither<bool> removeActivity({
    required RemoveActivityUrlParam urlParams,
  }) async {
    Either<bool> response = await _httpClient.delete(
      url: 'api/activities/{activity_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
  FutureEither<ActivityModel> findActivity({
    required FindActivityUrlParam urlParams,
  }) async {
    Either<Json> response = await _httpClient.get(
      url: 'api/activities/{activity_id}',
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<ActivityModel>(ActivityModel.fromMap(response.right!))
      : Left<ActivityModel>(response.left!);
  }
  
  FutureEither<PaginatedData<ActivityModel>> listActivities({
    required ListActivitiesQueryParam queryParams,
  }) async {
    Either<PaginatedData<dynamic>> response = await _httpClient.index(
      url: 'api/activities',
      queryParams: queryParams.toMap(),
    );

    return response.isRight
      ? Right<PaginatedData<ActivityModel>>(PaginatedData<ActivityModel>(
        data: ActivityModel.fromList(response.right!.data),
        meta: response.right!.meta,
      ))
      : Left<PaginatedData<ActivityModel>>(response.left!);
  }
  
  FutureEither<ActivityModel> addActivity({
    required AddActivityBodyParam params,
  }) async {
    
    FormData formData = FormData.fromMap(params.toMap());

    Either<Json> response = await _httpClient.post(
      url: 'api/activities',
      data: formData,
    );

    return response.isRight
      ? Right<ActivityModel>(ActivityModel.fromMap(response.right!))
      : Left<ActivityModel>(response.left!);
  }
  
  FutureEither<bool> editActivity({
    required EditActivityBodyParam params,
    required EditActivityUrlParam urlParams,
  }) async {
    
    FormData formData = FormData.fromMap(params.toMap());

    Either<bool> response = await _httpClient.put(
      url: 'api/activities/{activity_id}',
      data: formData,
      urlParams: urlParams.toMap(),
    );

    return response.isRight
      ? Right<bool>(response.right!)
      : Left<bool>(response.left!);
  }
  
}
